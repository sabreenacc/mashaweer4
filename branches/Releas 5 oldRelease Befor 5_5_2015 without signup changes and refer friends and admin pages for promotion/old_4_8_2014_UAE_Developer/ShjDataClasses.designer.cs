#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mashaweeruae")]
public partial class ShjDataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertSharjahZone(SharjahZone instance);
  partial void UpdateSharjahZone(SharjahZone instance);
  partial void DeleteSharjahZone(SharjahZone instance);
  partial void InsertSharjahZonePrice(SharjahZonePrice instance);
  partial void UpdateSharjahZonePrice(SharjahZonePrice instance);
  partial void DeleteSharjahZonePrice(SharjahZonePrice instance);
  #endregion
	
	public ShjDataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["mashaweerConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public ShjDataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ShjDataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ShjDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public ShjDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<SharjahZone> SharjahZones
	{
		get
		{
			return this.GetTable<SharjahZone>();
		}
	}
	
	public System.Data.Linq.Table<SharjahZonePrice> SharjahZonePrices
	{
		get
		{
			return this.GetTable<SharjahZonePrice>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="mashaweeruae.SharjahZone")]
public partial class SharjahZone : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ZoneId;
	
	private string _ArabicName;
	
	private string _EnglishName;
	
	private decimal _X;
	
	private decimal _Y;
	
	private System.Nullable<int> _zone_number;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZoneIdChanging(int value);
    partial void OnZoneIdChanged();
    partial void OnArabicNameChanging(string value);
    partial void OnArabicNameChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnXChanging(decimal value);
    partial void OnXChanged();
    partial void OnYChanging(decimal value);
    partial void OnYChanged();
    partial void Onzone_numberChanging(System.Nullable<int> value);
    partial void Onzone_numberChanged();
    #endregion
	
	public SharjahZone()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ZoneId
	{
		get
		{
			return this._ZoneId;
		}
		set
		{
			if ((this._ZoneId != value))
			{
				this.OnZoneIdChanging(value);
				this.SendPropertyChanging();
				this._ZoneId = value;
				this.SendPropertyChanged("ZoneId");
				this.OnZoneIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArabicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ArabicName
	{
		get
		{
			return this._ArabicName;
		}
		set
		{
			if ((this._ArabicName != value))
			{
				this.OnArabicNameChanging(value);
				this.SendPropertyChanging();
				this._ArabicName = value;
				this.SendPropertyChanged("ArabicName");
				this.OnArabicNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EnglishName
	{
		get
		{
			return this._EnglishName;
		}
		set
		{
			if ((this._EnglishName != value))
			{
				this.OnEnglishNameChanging(value);
				this.SendPropertyChanging();
				this._EnglishName = value;
				this.SendPropertyChanged("EnglishName");
				this.OnEnglishNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Decimal(18,15) NOT NULL")]
	public decimal X
	{
		get
		{
			return this._X;
		}
		set
		{
			if ((this._X != value))
			{
				this.OnXChanging(value);
				this.SendPropertyChanging();
				this._X = value;
				this.SendPropertyChanged("X");
				this.OnXChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Decimal(18,15) NOT NULL")]
	public decimal Y
	{
		get
		{
			return this._Y;
		}
		set
		{
			if ((this._Y != value))
			{
				this.OnYChanging(value);
				this.SendPropertyChanging();
				this._Y = value;
				this.SendPropertyChanged("Y");
				this.OnYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone_number", DbType="Int")]
	public System.Nullable<int> zone_number
	{
		get
		{
			return this._zone_number;
		}
		set
		{
			if ((this._zone_number != value))
			{
				this.Onzone_numberChanging(value);
				this.SendPropertyChanging();
				this._zone_number = value;
				this.SendPropertyChanged("zone_number");
				this.Onzone_numberChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="mashaweeruae.SharjahZonePrice")]
public partial class SharjahZonePrice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PriceId;
	
	private int _FromZone;
	
	private int _ToZone;
	
	private decimal _CarPrice;
	
	private decimal _MotorcyclePrice;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceIdChanging(int value);
    partial void OnPriceIdChanged();
    partial void OnFromZoneChanging(int value);
    partial void OnFromZoneChanged();
    partial void OnToZoneChanging(int value);
    partial void OnToZoneChanged();
    partial void OnCarPriceChanging(decimal value);
    partial void OnCarPriceChanged();
    partial void OnMotorcyclePriceChanging(decimal value);
    partial void OnMotorcyclePriceChanged();
    #endregion
	
	public SharjahZonePrice()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PriceId
	{
		get
		{
			return this._PriceId;
		}
		set
		{
			if ((this._PriceId != value))
			{
				this.OnPriceIdChanging(value);
				this.SendPropertyChanging();
				this._PriceId = value;
				this.SendPropertyChanged("PriceId");
				this.OnPriceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromZone", DbType="Int NOT NULL")]
	public int FromZone
	{
		get
		{
			return this._FromZone;
		}
		set
		{
			if ((this._FromZone != value))
			{
				this.OnFromZoneChanging(value);
				this.SendPropertyChanging();
				this._FromZone = value;
				this.SendPropertyChanged("FromZone");
				this.OnFromZoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToZone", DbType="Int NOT NULL")]
	public int ToZone
	{
		get
		{
			return this._ToZone;
		}
		set
		{
			if ((this._ToZone != value))
			{
				this.OnToZoneChanging(value);
				this.SendPropertyChanging();
				this._ToZone = value;
				this.SendPropertyChanged("ToZone");
				this.OnToZoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPrice", DbType="Decimal(18,5) NOT NULL")]
	public decimal CarPrice
	{
		get
		{
			return this._CarPrice;
		}
		set
		{
			if ((this._CarPrice != value))
			{
				this.OnCarPriceChanging(value);
				this.SendPropertyChanging();
				this._CarPrice = value;
				this.SendPropertyChanged("CarPrice");
				this.OnCarPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotorcyclePrice", DbType="Decimal(18,5) NOT NULL")]
	public decimal MotorcyclePrice
	{
		get
		{
			return this._MotorcyclePrice;
		}
		set
		{
			if ((this._MotorcyclePrice != value))
			{
				this.OnMotorcyclePriceChanging(value);
				this.SendPropertyChanging();
				this._MotorcyclePrice = value;
				this.SendPropertyChanged("MotorcyclePrice");
				this.OnMotorcyclePriceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
