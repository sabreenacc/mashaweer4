#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="mashaweeruae")]
public partial class DBDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertZonePrice(ZonePrice instance);
  partial void UpdateZonePrice(ZonePrice instance);
  partial void DeleteZonePrice(ZonePrice instance);
  partial void InsertEmiratePrice(EmiratePrice instance);
  partial void UpdateEmiratePrice(EmiratePrice instance);
  partial void DeleteEmiratePrice(EmiratePrice instance);
  partial void InsertFAQ(FAQ instance);
  partial void UpdateFAQ(FAQ instance);
  partial void DeleteFAQ(FAQ instance);
  partial void InsertNew(New instance);
  partial void UpdateNew(New instance);
  partial void DeleteNew(New instance);
  partial void InsertService(Service instance);
  partial void UpdateService(Service instance);
  partial void DeleteService(Service instance);
  partial void InsertSetting(Setting instance);
  partial void UpdateSetting(Setting instance);
  partial void DeleteSetting(Setting instance);
  partial void InsertSysUser(SysUser instance);
  partial void UpdateSysUser(SysUser instance);
  partial void DeleteSysUser(SysUser instance);
  partial void InsertZone(Zone instance);
  partial void UpdateZone(Zone instance);
  partial void DeleteZone(Zone instance);
  partial void InsertEEmirate(EEmirate instance);
  partial void UpdateEEmirate(EEmirate instance);
  partial void DeleteEEmirate(EEmirate instance);
  partial void InsertVisitorPromotion(VisitorPromotion instance);
  partial void UpdateVisitorPromotion(VisitorPromotion instance);
  partial void DeleteVisitorPromotion(VisitorPromotion instance);
  partial void InsertVisitor(Visitor instance);
  partial void UpdateVisitor(Visitor instance);
  partial void DeleteVisitor(Visitor instance);
  partial void InsertReferToFriend(ReferToFriend instance);
  partial void UpdateReferToFriend(ReferToFriend instance);
  partial void DeleteReferToFriend(ReferToFriend instance);
  partial void InsertDiscountcode(Discountcode instance);
  partial void UpdateDiscountcode(Discountcode instance);
  partial void DeleteDiscountcode(Discountcode instance);
  partial void InsertDiscountType(DiscountType instance);
  partial void UpdateDiscountType(DiscountType instance);
  partial void DeleteDiscountType(DiscountType instance);
  partial void InsertCustomerLocation(CustomerLocation instance);
  partial void UpdateCustomerLocation(CustomerLocation instance);
  partial void DeleteCustomerLocation(CustomerLocation instance);
  #endregion
	
	public DBDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MashaweerConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DBDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DBDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<ZonePrice> ZonePrices
	{
		get
		{
			return this.GetTable<ZonePrice>();
		}
	}
	
	public System.Data.Linq.Table<EmiratePrice> EmiratePrices
	{
		get
		{
			return this.GetTable<EmiratePrice>();
		}
	}
	
	public System.Data.Linq.Table<FAQ> FAQs
	{
		get
		{
			return this.GetTable<FAQ>();
		}
	}
	
	public System.Data.Linq.Table<New> News
	{
		get
		{
			return this.GetTable<New>();
		}
	}
	
	public System.Data.Linq.Table<Service> Services
	{
		get
		{
			return this.GetTable<Service>();
		}
	}
	
	public System.Data.Linq.Table<Setting> Settings
	{
		get
		{
			return this.GetTable<Setting>();
		}
	}
	
	public System.Data.Linq.Table<SysUser> SysUsers
	{
		get
		{
			return this.GetTable<SysUser>();
		}
	}
	
	public System.Data.Linq.Table<Zone> Zones
	{
		get
		{
			return this.GetTable<Zone>();
		}
	}
	
	public System.Data.Linq.Table<EEmirate> EEmirates
	{
		get
		{
			return this.GetTable<EEmirate>();
		}
	}
	
	public System.Data.Linq.Table<VisitorPromotion> VisitorPromotions
	{
		get
		{
			return this.GetTable<VisitorPromotion>();
		}
	}
	
	public System.Data.Linq.Table<Visitor> Visitors
	{
		get
		{
			return this.GetTable<Visitor>();
		}
	}
	
	public System.Data.Linq.Table<ReferToFriend> ReferToFriends
	{
		get
		{
			return this.GetTable<ReferToFriend>();
		}
	}
	
	public System.Data.Linq.Table<Discountcode> Discountcodes
	{
		get
		{
			return this.GetTable<Discountcode>();
		}
	}
	
	public System.Data.Linq.Table<DiscountType> DiscountTypes
	{
		get
		{
			return this.GetTable<DiscountType>();
		}
	}
	
	public System.Data.Linq.Table<CustomerLocation> CustomerLocations
	{
		get
		{
			return this.GetTable<CustomerLocation>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonePrice")]
public partial class ZonePrice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PriceId;
	
	private int _FromZone;
	
	private int _ToZone;
	
	private decimal _CarPrice;
	
	private decimal _MotorcyclePrice;
	
	private EntityRef<Zone> _Zone;
	
	private EntityRef<Zone> _Zone1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceIdChanging(int value);
    partial void OnPriceIdChanged();
    partial void OnFromZoneChanging(int value);
    partial void OnFromZoneChanged();
    partial void OnToZoneChanging(int value);
    partial void OnToZoneChanged();
    partial void OnCarPriceChanging(decimal value);
    partial void OnCarPriceChanged();
    partial void OnMotorcyclePriceChanging(decimal value);
    partial void OnMotorcyclePriceChanged();
    #endregion
	
	public ZonePrice()
	{
		this._Zone = default(EntityRef<Zone>);
		this._Zone1 = default(EntityRef<Zone>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PriceId
	{
		get
		{
			return this._PriceId;
		}
		set
		{
			if ((this._PriceId != value))
			{
				this.OnPriceIdChanging(value);
				this.SendPropertyChanging();
				this._PriceId = value;
				this.SendPropertyChanged("PriceId");
				this.OnPriceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromZone", DbType="Int NOT NULL")]
	public int FromZone
	{
		get
		{
			return this._FromZone;
		}
		set
		{
			if ((this._FromZone != value))
			{
				if (this._Zone.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFromZoneChanging(value);
				this.SendPropertyChanging();
				this._FromZone = value;
				this.SendPropertyChanged("FromZone");
				this.OnFromZoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToZone", DbType="Int NOT NULL")]
	public int ToZone
	{
		get
		{
			return this._ToZone;
		}
		set
		{
			if ((this._ToZone != value))
			{
				if (this._Zone1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnToZoneChanging(value);
				this.SendPropertyChanging();
				this._ToZone = value;
				this.SendPropertyChanged("ToZone");
				this.OnToZoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPrice", DbType="Decimal(18,5) NOT NULL")]
	public decimal CarPrice
	{
		get
		{
			return this._CarPrice;
		}
		set
		{
			if ((this._CarPrice != value))
			{
				this.OnCarPriceChanging(value);
				this.SendPropertyChanging();
				this._CarPrice = value;
				this.SendPropertyChanged("CarPrice");
				this.OnCarPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotorcyclePrice", DbType="Decimal(18,5) NOT NULL")]
	public decimal MotorcyclePrice
	{
		get
		{
			return this._MotorcyclePrice;
		}
		set
		{
			if ((this._MotorcyclePrice != value))
			{
				this.OnMotorcyclePriceChanging(value);
				this.SendPropertyChanging();
				this._MotorcyclePrice = value;
				this.SendPropertyChanged("MotorcyclePrice");
				this.OnMotorcyclePriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_ZonePrice", Storage="_Zone", ThisKey="FromZone", OtherKey="ZoneId", IsForeignKey=true)]
	public Zone Zone
	{
		get
		{
			return this._Zone.Entity;
		}
		set
		{
			Zone previousValue = this._Zone.Entity;
			if (((previousValue != value) 
						|| (this._Zone.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Zone.Entity = null;
					previousValue.ZonePrices.Remove(this);
				}
				this._Zone.Entity = value;
				if ((value != null))
				{
					value.ZonePrices.Add(this);
					this._FromZone = value.ZoneId;
				}
				else
				{
					this._FromZone = default(int);
				}
				this.SendPropertyChanged("Zone");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_ZonePrice1", Storage="_Zone1", ThisKey="ToZone", OtherKey="ZoneId", IsForeignKey=true)]
	public Zone Zone1
	{
		get
		{
			return this._Zone1.Entity;
		}
		set
		{
			Zone previousValue = this._Zone1.Entity;
			if (((previousValue != value) 
						|| (this._Zone1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Zone1.Entity = null;
					previousValue.ZonePrices1.Remove(this);
				}
				this._Zone1.Entity = value;
				if ((value != null))
				{
					value.ZonePrices1.Add(this);
					this._ToZone = value.ZoneId;
				}
				else
				{
					this._ToZone = default(int);
				}
				this.SendPropertyChanged("Zone1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmiratePrice")]
public partial class EmiratePrice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PriceId;
	
	private int _FromEmirate;
	
	private int _ToEmirate;
	
	private decimal _CarPrice;
	
	private decimal _MotorcyclePrice;
	
	private EntityRef<EEmirate> _EEmirate;
	
	private EntityRef<EEmirate> _EEmirate1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPriceIdChanging(int value);
    partial void OnPriceIdChanged();
    partial void OnFromEmirateChanging(int value);
    partial void OnFromEmirateChanged();
    partial void OnToEmirateChanging(int value);
    partial void OnToEmirateChanged();
    partial void OnCarPriceChanging(decimal value);
    partial void OnCarPriceChanged();
    partial void OnMotorcyclePriceChanging(decimal value);
    partial void OnMotorcyclePriceChanged();
    #endregion
	
	public EmiratePrice()
	{
		this._EEmirate = default(EntityRef<EEmirate>);
		this._EEmirate1 = default(EntityRef<EEmirate>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PriceId
	{
		get
		{
			return this._PriceId;
		}
		set
		{
			if ((this._PriceId != value))
			{
				this.OnPriceIdChanging(value);
				this.SendPropertyChanging();
				this._PriceId = value;
				this.SendPropertyChanged("PriceId");
				this.OnPriceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromEmirate", DbType="Int NOT NULL")]
	public int FromEmirate
	{
		get
		{
			return this._FromEmirate;
		}
		set
		{
			if ((this._FromEmirate != value))
			{
				if (this._EEmirate.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnFromEmirateChanging(value);
				this.SendPropertyChanging();
				this._FromEmirate = value;
				this.SendPropertyChanged("FromEmirate");
				this.OnFromEmirateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToEmirate", DbType="Int NOT NULL")]
	public int ToEmirate
	{
		get
		{
			return this._ToEmirate;
		}
		set
		{
			if ((this._ToEmirate != value))
			{
				if (this._EEmirate1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnToEmirateChanging(value);
				this.SendPropertyChanging();
				this._ToEmirate = value;
				this.SendPropertyChanged("ToEmirate");
				this.OnToEmirateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarPrice", DbType="Decimal(18,5) NOT NULL")]
	public decimal CarPrice
	{
		get
		{
			return this._CarPrice;
		}
		set
		{
			if ((this._CarPrice != value))
			{
				this.OnCarPriceChanging(value);
				this.SendPropertyChanging();
				this._CarPrice = value;
				this.SendPropertyChanged("CarPrice");
				this.OnCarPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MotorcyclePrice", DbType="Decimal(18,5) NOT NULL")]
	public decimal MotorcyclePrice
	{
		get
		{
			return this._MotorcyclePrice;
		}
		set
		{
			if ((this._MotorcyclePrice != value))
			{
				this.OnMotorcyclePriceChanging(value);
				this.SendPropertyChanging();
				this._MotorcyclePrice = value;
				this.SendPropertyChanged("MotorcyclePrice");
				this.OnMotorcyclePriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_EmiratePrice", Storage="_EEmirate", ThisKey="FromEmirate", OtherKey="EmirateId", IsForeignKey=true)]
	public EEmirate EEmirate
	{
		get
		{
			return this._EEmirate.Entity;
		}
		set
		{
			EEmirate previousValue = this._EEmirate.Entity;
			if (((previousValue != value) 
						|| (this._EEmirate.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EEmirate.Entity = null;
					previousValue.EmiratePrices.Remove(this);
				}
				this._EEmirate.Entity = value;
				if ((value != null))
				{
					value.EmiratePrices.Add(this);
					this._FromEmirate = value.EmirateId;
				}
				else
				{
					this._FromEmirate = default(int);
				}
				this.SendPropertyChanged("EEmirate");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_EmiratePrice1", Storage="_EEmirate1", ThisKey="ToEmirate", OtherKey="EmirateId", IsForeignKey=true)]
	public EEmirate EEmirate1
	{
		get
		{
			return this._EEmirate1.Entity;
		}
		set
		{
			EEmirate previousValue = this._EEmirate1.Entity;
			if (((previousValue != value) 
						|| (this._EEmirate1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EEmirate1.Entity = null;
					previousValue.EmiratePrices1.Remove(this);
				}
				this._EEmirate1.Entity = value;
				if ((value != null))
				{
					value.EmiratePrices1.Add(this);
					this._ToEmirate = value.EmirateId;
				}
				else
				{
					this._ToEmirate = default(int);
				}
				this.SendPropertyChanged("EEmirate1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FAQ")]
public partial class FAQ : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _FAQId;
	
	private string _Question;
	
	private string _Answer;
	
	private int _Language;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFAQIdChanging(int value);
    partial void OnFAQIdChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnLanguageChanging(int value);
    partial void OnLanguageChanged();
    #endregion
	
	public FAQ()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int FAQId
	{
		get
		{
			return this._FAQId;
		}
		set
		{
			if ((this._FAQId != value))
			{
				this.OnFAQIdChanging(value);
				this.SendPropertyChanging();
				this._FAQId = value;
				this.SendPropertyChanged("FAQId");
				this.OnFAQIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Question
	{
		get
		{
			return this._Question;
		}
		set
		{
			if ((this._Question != value))
			{
				this.OnQuestionChanging(value);
				this.SendPropertyChanging();
				this._Question = value;
				this.SendPropertyChanged("Question");
				this.OnQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Answer
	{
		get
		{
			return this._Answer;
		}
		set
		{
			if ((this._Answer != value))
			{
				this.OnAnswerChanging(value);
				this.SendPropertyChanging();
				this._Answer = value;
				this.SendPropertyChanged("Answer");
				this.OnAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int NOT NULL")]
	public int Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.New")]
public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _NewID;
	
	private string _Title;
	
	private string _Description;
	
	private System.DateTime _CreatedDate;
	
	private int _Language;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewIDChanging(int value);
    partial void OnNewIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLanguageChanging(int value);
    partial void OnLanguageChanged();
    #endregion
	
	public New()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int NewID
	{
		get
		{
			return this._NewID;
		}
		set
		{
			if ((this._NewID != value))
			{
				this.OnNewIDChanging(value);
				this.SendPropertyChanging();
				this._NewID = value;
				this.SendPropertyChanged("NewID");
				this.OnNewIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int NOT NULL")]
	public int Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ServiceId;
	
	private string _Name;
	
	private string _Description;
	
	private string _Image;
	
	private int _Language;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnServiceIdChanging(int value);
    partial void OnServiceIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnLanguageChanging(int value);
    partial void OnLanguageChanged();
    #endregion
	
	public Service()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ServiceId
	{
		get
		{
			return this._ServiceId;
		}
		set
		{
			if ((this._ServiceId != value))
			{
				this.OnServiceIdChanging(value);
				this.SendPropertyChanging();
				this._ServiceId = value;
				this.SendPropertyChanged("ServiceId");
				this.OnServiceIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Language", DbType="Int NOT NULL")]
	public int Language
	{
		get
		{
			return this._Language;
		}
		set
		{
			if ((this._Language != value))
			{
				this.OnLanguageChanging(value);
				this.SendPropertyChanging();
				this._Language = value;
				this.SendPropertyChanged("Language");
				this.OnLanguageChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SettingId;
	
	private string _SettingKey;
	
	private string _SettingValue;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingIdChanging(int value);
    partial void OnSettingIdChanged();
    partial void OnSettingKeyChanging(string value);
    partial void OnSettingKeyChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
	
	public Setting()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int SettingId
	{
		get
		{
			return this._SettingId;
		}
		set
		{
			if ((this._SettingId != value))
			{
				this.OnSettingIdChanging(value);
				this.SendPropertyChanging();
				this._SettingId = value;
				this.SendPropertyChanged("SettingId");
				this.OnSettingIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string SettingKey
	{
		get
		{
			return this._SettingKey;
		}
		set
		{
			if ((this._SettingKey != value))
			{
				this.OnSettingKeyChanging(value);
				this.SendPropertyChanging();
				this._SettingKey = value;
				this.SendPropertyChanged("SettingKey");
				this.OnSettingKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string SettingValue
	{
		get
		{
			return this._SettingValue;
		}
		set
		{
			if ((this._SettingValue != value))
			{
				this.OnSettingValueChanging(value);
				this.SendPropertyChanging();
				this._SettingValue = value;
				this.SendPropertyChanged("SettingValue");
				this.OnSettingValueChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysUser")]
public partial class SysUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserID;
	
	private string _Name;
	
	private string _UserName;
	
	private string _Password;
	
	private bool _IsActive;
	
	private System.DateTime _CreatedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
	
	public SysUser()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zone")]
public partial class Zone : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ZoneId;
	
	private string _ArabicName;
	
	private string _EnglishName;
	
	private decimal _X;
	
	private decimal _Y;
	
	private System.Nullable<int> _zone_number;
	
	private System.Nullable<int> _EmirateId;
	
	private EntitySet<ZonePrice> _ZonePrices;
	
	private EntitySet<ZonePrice> _ZonePrices1;
	
	private EntitySet<Visitor> _Visitors;
	
	private EntitySet<CustomerLocation> _CustomerLocations;
	
	private EntityRef<EEmirate> _EEmirate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZoneIdChanging(int value);
    partial void OnZoneIdChanged();
    partial void OnArabicNameChanging(string value);
    partial void OnArabicNameChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnXChanging(decimal value);
    partial void OnXChanged();
    partial void OnYChanging(decimal value);
    partial void OnYChanged();
    partial void Onzone_numberChanging(System.Nullable<int> value);
    partial void Onzone_numberChanged();
    partial void OnEmirateIdChanging(System.Nullable<int> value);
    partial void OnEmirateIdChanged();
    #endregion
	
	public Zone()
	{
		this._ZonePrices = new EntitySet<ZonePrice>(new Action<ZonePrice>(this.attach_ZonePrices), new Action<ZonePrice>(this.detach_ZonePrices));
		this._ZonePrices1 = new EntitySet<ZonePrice>(new Action<ZonePrice>(this.attach_ZonePrices1), new Action<ZonePrice>(this.detach_ZonePrices1));
		this._Visitors = new EntitySet<Visitor>(new Action<Visitor>(this.attach_Visitors), new Action<Visitor>(this.detach_Visitors));
		this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
		this._EEmirate = default(EntityRef<EEmirate>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ZoneId
	{
		get
		{
			return this._ZoneId;
		}
		set
		{
			if ((this._ZoneId != value))
			{
				this.OnZoneIdChanging(value);
				this.SendPropertyChanging();
				this._ZoneId = value;
				this.SendPropertyChanged("ZoneId");
				this.OnZoneIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArabicName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ArabicName
	{
		get
		{
			return this._ArabicName;
		}
		set
		{
			if ((this._ArabicName != value))
			{
				this.OnArabicNameChanging(value);
				this.SendPropertyChanging();
				this._ArabicName = value;
				this.SendPropertyChanged("ArabicName");
				this.OnArabicNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string EnglishName
	{
		get
		{
			return this._EnglishName;
		}
		set
		{
			if ((this._EnglishName != value))
			{
				this.OnEnglishNameChanging(value);
				this.SendPropertyChanging();
				this._EnglishName = value;
				this.SendPropertyChanged("EnglishName");
				this.OnEnglishNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Decimal(18,15) NOT NULL")]
	public decimal X
	{
		get
		{
			return this._X;
		}
		set
		{
			if ((this._X != value))
			{
				this.OnXChanging(value);
				this.SendPropertyChanging();
				this._X = value;
				this.SendPropertyChanged("X");
				this.OnXChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Decimal(18,15) NOT NULL")]
	public decimal Y
	{
		get
		{
			return this._Y;
		}
		set
		{
			if ((this._Y != value))
			{
				this.OnYChanging(value);
				this.SendPropertyChanging();
				this._Y = value;
				this.SendPropertyChanged("Y");
				this.OnYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zone_number", DbType="Int")]
	public System.Nullable<int> zone_number
	{
		get
		{
			return this._zone_number;
		}
		set
		{
			if ((this._zone_number != value))
			{
				this.Onzone_numberChanging(value);
				this.SendPropertyChanging();
				this._zone_number = value;
				this.SendPropertyChanged("zone_number");
				this.Onzone_numberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmirateId", DbType="Int")]
	public System.Nullable<int> EmirateId
	{
		get
		{
			return this._EmirateId;
		}
		set
		{
			if ((this._EmirateId != value))
			{
				if (this._EEmirate.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnEmirateIdChanging(value);
				this.SendPropertyChanging();
				this._EmirateId = value;
				this.SendPropertyChanged("EmirateId");
				this.OnEmirateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_ZonePrice", Storage="_ZonePrices", ThisKey="ZoneId", OtherKey="FromZone")]
	public EntitySet<ZonePrice> ZonePrices
	{
		get
		{
			return this._ZonePrices;
		}
		set
		{
			this._ZonePrices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_ZonePrice1", Storage="_ZonePrices1", ThisKey="ZoneId", OtherKey="ToZone")]
	public EntitySet<ZonePrice> ZonePrices1
	{
		get
		{
			return this._ZonePrices1;
		}
		set
		{
			this._ZonePrices1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_Visitor", Storage="_Visitors", ThisKey="ZoneId", OtherKey="AreaId")]
	public EntitySet<Visitor> Visitors
	{
		get
		{
			return this._Visitors;
		}
		set
		{
			this._Visitors.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_CustomerLocation", Storage="_CustomerLocations", ThisKey="ZoneId", OtherKey="AreaId")]
	public EntitySet<CustomerLocation> CustomerLocations
	{
		get
		{
			return this._CustomerLocations;
		}
		set
		{
			this._CustomerLocations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_Zone", Storage="_EEmirate", ThisKey="EmirateId", OtherKey="EmirateId", IsForeignKey=true)]
	public EEmirate EEmirate
	{
		get
		{
			return this._EEmirate.Entity;
		}
		set
		{
			EEmirate previousValue = this._EEmirate.Entity;
			if (((previousValue != value) 
						|| (this._EEmirate.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EEmirate.Entity = null;
					previousValue.Zones.Remove(this);
				}
				this._EEmirate.Entity = value;
				if ((value != null))
				{
					value.Zones.Add(this);
					this._EmirateId = value.EmirateId;
				}
				else
				{
					this._EmirateId = default(Nullable<int>);
				}
				this.SendPropertyChanged("EEmirate");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ZonePrices(ZonePrice entity)
	{
		this.SendPropertyChanging();
		entity.Zone = this;
	}
	
	private void detach_ZonePrices(ZonePrice entity)
	{
		this.SendPropertyChanging();
		entity.Zone = null;
	}
	
	private void attach_ZonePrices1(ZonePrice entity)
	{
		this.SendPropertyChanging();
		entity.Zone1 = this;
	}
	
	private void detach_ZonePrices1(ZonePrice entity)
	{
		this.SendPropertyChanging();
		entity.Zone1 = null;
	}
	
	private void attach_Visitors(Visitor entity)
	{
		this.SendPropertyChanging();
		entity.Zone = this;
	}
	
	private void detach_Visitors(Visitor entity)
	{
		this.SendPropertyChanging();
		entity.Zone = null;
	}
	
	private void attach_CustomerLocations(CustomerLocation entity)
	{
		this.SendPropertyChanging();
		entity.Zone = this;
	}
	
	private void detach_CustomerLocations(CustomerLocation entity)
	{
		this.SendPropertyChanging();
		entity.Zone = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EEmirate")]
public partial class EEmirate : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _EmirateId;
	
	private string _ArabicName;
	
	private string _EnglishName;
	
	private System.Nullable<decimal> _X;
	
	private System.Nullable<decimal> _Y;
	
	private EntitySet<EmiratePrice> _EmiratePrices;
	
	private EntitySet<EmiratePrice> _EmiratePrices1;
	
	private EntitySet<Zone> _Zones;
	
	private EntitySet<Visitor> _Visitors;
	
	private EntitySet<CustomerLocation> _CustomerLocations;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmirateIdChanging(int value);
    partial void OnEmirateIdChanged();
    partial void OnArabicNameChanging(string value);
    partial void OnArabicNameChanged();
    partial void OnEnglishNameChanging(string value);
    partial void OnEnglishNameChanged();
    partial void OnXChanging(System.Nullable<decimal> value);
    partial void OnXChanged();
    partial void OnYChanging(System.Nullable<decimal> value);
    partial void OnYChanged();
    #endregion
	
	public EEmirate()
	{
		this._EmiratePrices = new EntitySet<EmiratePrice>(new Action<EmiratePrice>(this.attach_EmiratePrices), new Action<EmiratePrice>(this.detach_EmiratePrices));
		this._EmiratePrices1 = new EntitySet<EmiratePrice>(new Action<EmiratePrice>(this.attach_EmiratePrices1), new Action<EmiratePrice>(this.detach_EmiratePrices1));
		this._Zones = new EntitySet<Zone>(new Action<Zone>(this.attach_Zones), new Action<Zone>(this.detach_Zones));
		this._Visitors = new EntitySet<Visitor>(new Action<Visitor>(this.attach_Visitors), new Action<Visitor>(this.detach_Visitors));
		this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmirateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int EmirateId
	{
		get
		{
			return this._EmirateId;
		}
		set
		{
			if ((this._EmirateId != value))
			{
				this.OnEmirateIdChanging(value);
				this.SendPropertyChanging();
				this._EmirateId = value;
				this.SendPropertyChanged("EmirateId");
				this.OnEmirateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArabicName", DbType="NVarChar(50)")]
	public string ArabicName
	{
		get
		{
			return this._ArabicName;
		}
		set
		{
			if ((this._ArabicName != value))
			{
				this.OnArabicNameChanging(value);
				this.SendPropertyChanging();
				this._ArabicName = value;
				this.SendPropertyChanged("ArabicName");
				this.OnArabicNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnglishName", DbType="NVarChar(50)")]
	public string EnglishName
	{
		get
		{
			return this._EnglishName;
		}
		set
		{
			if ((this._EnglishName != value))
			{
				this.OnEnglishNameChanging(value);
				this.SendPropertyChanging();
				this._EnglishName = value;
				this.SendPropertyChanged("EnglishName");
				this.OnEnglishNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Decimal(18,15)")]
	public System.Nullable<decimal> X
	{
		get
		{
			return this._X;
		}
		set
		{
			if ((this._X != value))
			{
				this.OnXChanging(value);
				this.SendPropertyChanging();
				this._X = value;
				this.SendPropertyChanged("X");
				this.OnXChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Decimal(18,15)")]
	public System.Nullable<decimal> Y
	{
		get
		{
			return this._Y;
		}
		set
		{
			if ((this._Y != value))
			{
				this.OnYChanging(value);
				this.SendPropertyChanging();
				this._Y = value;
				this.SendPropertyChanged("Y");
				this.OnYChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_EmiratePrice", Storage="_EmiratePrices", ThisKey="EmirateId", OtherKey="FromEmirate")]
	public EntitySet<EmiratePrice> EmiratePrices
	{
		get
		{
			return this._EmiratePrices;
		}
		set
		{
			this._EmiratePrices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_EmiratePrice1", Storage="_EmiratePrices1", ThisKey="EmirateId", OtherKey="ToEmirate")]
	public EntitySet<EmiratePrice> EmiratePrices1
	{
		get
		{
			return this._EmiratePrices1;
		}
		set
		{
			this._EmiratePrices1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_Zone", Storage="_Zones", ThisKey="EmirateId", OtherKey="EmirateId")]
	public EntitySet<Zone> Zones
	{
		get
		{
			return this._Zones;
		}
		set
		{
			this._Zones.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_Visitor", Storage="_Visitors", ThisKey="EmirateId", OtherKey="CityId")]
	public EntitySet<Visitor> Visitors
	{
		get
		{
			return this._Visitors;
		}
		set
		{
			this._Visitors.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_CustomerLocation", Storage="_CustomerLocations", ThisKey="EmirateId", OtherKey="City")]
	public EntitySet<CustomerLocation> CustomerLocations
	{
		get
		{
			return this._CustomerLocations;
		}
		set
		{
			this._CustomerLocations.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_EmiratePrices(EmiratePrice entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate = this;
	}
	
	private void detach_EmiratePrices(EmiratePrice entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate = null;
	}
	
	private void attach_EmiratePrices1(EmiratePrice entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate1 = this;
	}
	
	private void detach_EmiratePrices1(EmiratePrice entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate1 = null;
	}
	
	private void attach_Zones(Zone entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate = this;
	}
	
	private void detach_Zones(Zone entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate = null;
	}
	
	private void attach_Visitors(Visitor entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate = this;
	}
	
	private void detach_Visitors(Visitor entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate = null;
	}
	
	private void attach_CustomerLocations(CustomerLocation entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate = this;
	}
	
	private void detach_CustomerLocations(CustomerLocation entity)
	{
		this.SendPropertyChanging();
		entity.EEmirate = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="mashaweeruae.VisitorPromotions")]
public partial class VisitorPromotion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _VisitorId;
	
	private int _CodeNumber;
	
	private EntityRef<Visitor> _Visitor;
	
	private EntityRef<Discountcode> _Discountcode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitorIdChanging(int value);
    partial void OnVisitorIdChanged();
    partial void OnCodeNumberChanging(int value);
    partial void OnCodeNumberChanged();
    #endregion
	
	public VisitorPromotion()
	{
		this._Visitor = default(EntityRef<Visitor>);
		this._Discountcode = default(EntityRef<Discountcode>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int VisitorId
	{
		get
		{
			return this._VisitorId;
		}
		set
		{
			if ((this._VisitorId != value))
			{
				if (this._Visitor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVisitorIdChanging(value);
				this.SendPropertyChanging();
				this._VisitorId = value;
				this.SendPropertyChanged("VisitorId");
				this.OnVisitorIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNumber", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CodeNumber
	{
		get
		{
			return this._CodeNumber;
		}
		set
		{
			if ((this._CodeNumber != value))
			{
				if (this._Discountcode.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCodeNumberChanging(value);
				this.SendPropertyChanging();
				this._CodeNumber = value;
				this.SendPropertyChanged("CodeNumber");
				this.OnCodeNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_VisitorPromotion", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
	public Visitor Visitor
	{
		get
		{
			return this._Visitor.Entity;
		}
		set
		{
			Visitor previousValue = this._Visitor.Entity;
			if (((previousValue != value) 
						|| (this._Visitor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Visitor.Entity = null;
					previousValue.VisitorPromotions.Remove(this);
				}
				this._Visitor.Entity = value;
				if ((value != null))
				{
					value.VisitorPromotions.Add(this);
					this._VisitorId = value.VisitorId;
				}
				else
				{
					this._VisitorId = default(int);
				}
				this.SendPropertyChanged("Visitor");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discountcode_VisitorPromotion", Storage="_Discountcode", ThisKey="CodeNumber", OtherKey="CodeNumber", IsForeignKey=true)]
	public Discountcode Discountcode
	{
		get
		{
			return this._Discountcode.Entity;
		}
		set
		{
			Discountcode previousValue = this._Discountcode.Entity;
			if (((previousValue != value) 
						|| (this._Discountcode.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Discountcode.Entity = null;
					previousValue.VisitorPromotions.Remove(this);
				}
				this._Discountcode.Entity = value;
				if ((value != null))
				{
					value.VisitorPromotions.Add(this);
					this._CodeNumber = value.CodeNumber;
				}
				else
				{
					this._CodeNumber = default(int);
				}
				this.SendPropertyChanged("Discountcode");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="mashaweeruae.Visitor")]
public partial class Visitor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Name;
	
	private string _Email;
	
	private string _PhoneNumber;
	
	private string _Address;
	
	private System.Nullable<int> _AreaId;
	
	private int _VisitorId;
	
	private string _password;
	
	private System.Nullable<int> _CityId;
	
	private EntitySet<VisitorPromotion> _VisitorPromotions;
	
	private EntitySet<ReferToFriend> _ReferToFriends;
	
	private EntitySet<CustomerLocation> _CustomerLocations;
	
	private EntityRef<EEmirate> _EEmirate;
	
	private EntityRef<Zone> _Zone;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAreaIdChanging(System.Nullable<int> value);
    partial void OnAreaIdChanged();
    partial void OnVisitorIdChanging(int value);
    partial void OnVisitorIdChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnCityIdChanging(System.Nullable<int> value);
    partial void OnCityIdChanged();
    #endregion
	
	public Visitor()
	{
		this._VisitorPromotions = new EntitySet<VisitorPromotion>(new Action<VisitorPromotion>(this.attach_VisitorPromotions), new Action<VisitorPromotion>(this.detach_VisitorPromotions));
		this._ReferToFriends = new EntitySet<ReferToFriend>(new Action<ReferToFriend>(this.attach_ReferToFriends), new Action<ReferToFriend>(this.detach_ReferToFriends));
		this._CustomerLocations = new EntitySet<CustomerLocation>(new Action<CustomerLocation>(this.attach_CustomerLocations), new Action<CustomerLocation>(this.detach_CustomerLocations));
		this._EEmirate = default(EntityRef<EEmirate>);
		this._Zone = default(EntityRef<Zone>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
	public string PhoneNumber
	{
		get
		{
			return this._PhoneNumber;
		}
		set
		{
			if ((this._PhoneNumber != value))
			{
				this.OnPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._PhoneNumber = value;
				this.SendPropertyChanged("PhoneNumber");
				this.OnPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int")]
	public System.Nullable<int> AreaId
	{
		get
		{
			return this._AreaId;
		}
		set
		{
			if ((this._AreaId != value))
			{
				if (this._Zone.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAreaIdChanging(value);
				this.SendPropertyChanging();
				this._AreaId = value;
				this.SendPropertyChanged("AreaId");
				this.OnAreaIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int VisitorId
	{
		get
		{
			return this._VisitorId;
		}
		set
		{
			if ((this._VisitorId != value))
			{
				this.OnVisitorIdChanging(value);
				this.SendPropertyChanging();
				this._VisitorId = value;
				this.SendPropertyChanged("VisitorId");
				this.OnVisitorIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityId", DbType="Int")]
	public System.Nullable<int> CityId
	{
		get
		{
			return this._CityId;
		}
		set
		{
			if ((this._CityId != value))
			{
				if (this._EEmirate.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCityIdChanging(value);
				this.SendPropertyChanging();
				this._CityId = value;
				this.SendPropertyChanged("CityId");
				this.OnCityIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_VisitorPromotion", Storage="_VisitorPromotions", ThisKey="VisitorId", OtherKey="VisitorId")]
	public EntitySet<VisitorPromotion> VisitorPromotions
	{
		get
		{
			return this._VisitorPromotions;
		}
		set
		{
			this._VisitorPromotions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_ReferToFriend", Storage="_ReferToFriends", ThisKey="VisitorId", OtherKey="VisitorId")]
	public EntitySet<ReferToFriend> ReferToFriends
	{
		get
		{
			return this._ReferToFriends;
		}
		set
		{
			this._ReferToFriends.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_CustomerLocation", Storage="_CustomerLocations", ThisKey="VisitorId", OtherKey="CustomerId")]
	public EntitySet<CustomerLocation> CustomerLocations
	{
		get
		{
			return this._CustomerLocations;
		}
		set
		{
			this._CustomerLocations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_Visitor", Storage="_EEmirate", ThisKey="CityId", OtherKey="EmirateId", IsForeignKey=true)]
	public EEmirate EEmirate
	{
		get
		{
			return this._EEmirate.Entity;
		}
		set
		{
			EEmirate previousValue = this._EEmirate.Entity;
			if (((previousValue != value) 
						|| (this._EEmirate.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EEmirate.Entity = null;
					previousValue.Visitors.Remove(this);
				}
				this._EEmirate.Entity = value;
				if ((value != null))
				{
					value.Visitors.Add(this);
					this._CityId = value.EmirateId;
				}
				else
				{
					this._CityId = default(Nullable<int>);
				}
				this.SendPropertyChanged("EEmirate");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_Visitor", Storage="_Zone", ThisKey="AreaId", OtherKey="ZoneId", IsForeignKey=true)]
	public Zone Zone
	{
		get
		{
			return this._Zone.Entity;
		}
		set
		{
			Zone previousValue = this._Zone.Entity;
			if (((previousValue != value) 
						|| (this._Zone.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Zone.Entity = null;
					previousValue.Visitors.Remove(this);
				}
				this._Zone.Entity = value;
				if ((value != null))
				{
					value.Visitors.Add(this);
					this._AreaId = value.ZoneId;
				}
				else
				{
					this._AreaId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Zone");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_VisitorPromotions(VisitorPromotion entity)
	{
		this.SendPropertyChanging();
		entity.Visitor = this;
	}
	
	private void detach_VisitorPromotions(VisitorPromotion entity)
	{
		this.SendPropertyChanging();
		entity.Visitor = null;
	}
	
	private void attach_ReferToFriends(ReferToFriend entity)
	{
		this.SendPropertyChanging();
		entity.Visitor = this;
	}
	
	private void detach_ReferToFriends(ReferToFriend entity)
	{
		this.SendPropertyChanging();
		entity.Visitor = null;
	}
	
	private void attach_CustomerLocations(CustomerLocation entity)
	{
		this.SendPropertyChanging();
		entity.Visitor = this;
	}
	
	private void detach_CustomerLocations(CustomerLocation entity)
	{
		this.SendPropertyChanging();
		entity.Visitor = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="mashaweeruae.ReferToFriend")]
public partial class ReferToFriend : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ReferToFriendId;
	
	private string _FriendEmail;
	
	private System.Nullable<int> _VisitorId;
	
	private string _VisitorEmailIfnotRegistered;
	
	private System.Nullable<int> _DiscountcodeId;
	
	private EntityRef<Visitor> _Visitor;
	
	private EntityRef<Discountcode> _Discountcode;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReferToFriendIdChanging(int value);
    partial void OnReferToFriendIdChanged();
    partial void OnFriendEmailChanging(string value);
    partial void OnFriendEmailChanged();
    partial void OnVisitorIdChanging(System.Nullable<int> value);
    partial void OnVisitorIdChanged();
    partial void OnVisitorEmailIfnotRegisteredChanging(string value);
    partial void OnVisitorEmailIfnotRegisteredChanged();
    partial void OnDiscountcodeIdChanging(System.Nullable<int> value);
    partial void OnDiscountcodeIdChanged();
    #endregion
	
	public ReferToFriend()
	{
		this._Visitor = default(EntityRef<Visitor>);
		this._Discountcode = default(EntityRef<Discountcode>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferToFriendId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ReferToFriendId
	{
		get
		{
			return this._ReferToFriendId;
		}
		set
		{
			if ((this._ReferToFriendId != value))
			{
				this.OnReferToFriendIdChanging(value);
				this.SendPropertyChanging();
				this._ReferToFriendId = value;
				this.SendPropertyChanged("ReferToFriendId");
				this.OnReferToFriendIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FriendEmail", DbType="NVarChar(50)")]
	public string FriendEmail
	{
		get
		{
			return this._FriendEmail;
		}
		set
		{
			if ((this._FriendEmail != value))
			{
				this.OnFriendEmailChanging(value);
				this.SendPropertyChanging();
				this._FriendEmail = value;
				this.SendPropertyChanged("FriendEmail");
				this.OnFriendEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorId", DbType="Int")]
	public System.Nullable<int> VisitorId
	{
		get
		{
			return this._VisitorId;
		}
		set
		{
			if ((this._VisitorId != value))
			{
				if (this._Visitor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnVisitorIdChanging(value);
				this.SendPropertyChanging();
				this._VisitorId = value;
				this.SendPropertyChanged("VisitorId");
				this.OnVisitorIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorEmailIfnotRegistered", DbType="NVarChar(50)")]
	public string VisitorEmailIfnotRegistered
	{
		get
		{
			return this._VisitorEmailIfnotRegistered;
		}
		set
		{
			if ((this._VisitorEmailIfnotRegistered != value))
			{
				this.OnVisitorEmailIfnotRegisteredChanging(value);
				this.SendPropertyChanging();
				this._VisitorEmailIfnotRegistered = value;
				this.SendPropertyChanged("VisitorEmailIfnotRegistered");
				this.OnVisitorEmailIfnotRegisteredChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountcodeId", DbType="Int")]
	public System.Nullable<int> DiscountcodeId
	{
		get
		{
			return this._DiscountcodeId;
		}
		set
		{
			if ((this._DiscountcodeId != value))
			{
				if (this._Discountcode.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDiscountcodeIdChanging(value);
				this.SendPropertyChanging();
				this._DiscountcodeId = value;
				this.SendPropertyChanged("DiscountcodeId");
				this.OnDiscountcodeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_ReferToFriend", Storage="_Visitor", ThisKey="VisitorId", OtherKey="VisitorId", IsForeignKey=true)]
	public Visitor Visitor
	{
		get
		{
			return this._Visitor.Entity;
		}
		set
		{
			Visitor previousValue = this._Visitor.Entity;
			if (((previousValue != value) 
						|| (this._Visitor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Visitor.Entity = null;
					previousValue.ReferToFriends.Remove(this);
				}
				this._Visitor.Entity = value;
				if ((value != null))
				{
					value.ReferToFriends.Add(this);
					this._VisitorId = value.VisitorId;
				}
				else
				{
					this._VisitorId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Visitor");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discountcode_ReferToFriend", Storage="_Discountcode", ThisKey="DiscountcodeId", OtherKey="CodeNumber", IsForeignKey=true)]
	public Discountcode Discountcode
	{
		get
		{
			return this._Discountcode.Entity;
		}
		set
		{
			Discountcode previousValue = this._Discountcode.Entity;
			if (((previousValue != value) 
						|| (this._Discountcode.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Discountcode.Entity = null;
					previousValue.ReferToFriends.Remove(this);
				}
				this._Discountcode.Entity = value;
				if ((value != null))
				{
					value.ReferToFriends.Add(this);
					this._DiscountcodeId = value.CodeNumber;
				}
				else
				{
					this._DiscountcodeId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Discountcode");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="mashaweeruae.Discountcodes")]
public partial class Discountcode : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CodeNumber;
	
	private System.Nullable<bool> _Codeused;
	
	private System.Nullable<System.DateTime> _GeneratedDate;
	
	private System.Nullable<int> _ValidatPeriod;
	
	private System.Nullable<System.DateTime> _UsedDate;
	
	private System.Nullable<int> _DiscountTypeId;
	
	private string _PromotionCode;
	
	private System.Nullable<System.DateTime> _ExpiryDate;
	
	private EntitySet<VisitorPromotion> _VisitorPromotions;
	
	private EntitySet<ReferToFriend> _ReferToFriends;
	
	private EntityRef<DiscountType> _DiscountType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeNumberChanging(int value);
    partial void OnCodeNumberChanged();
    partial void OnCodeusedChanging(System.Nullable<bool> value);
    partial void OnCodeusedChanged();
    partial void OnGeneratedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnGeneratedDateChanged();
    partial void OnValidatPeriodChanging(System.Nullable<int> value);
    partial void OnValidatPeriodChanged();
    partial void OnUsedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUsedDateChanged();
    partial void OnDiscountTypeIdChanging(System.Nullable<int> value);
    partial void OnDiscountTypeIdChanged();
    partial void OnPromotionCodeChanging(string value);
    partial void OnPromotionCodeChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    #endregion
	
	public Discountcode()
	{
		this._VisitorPromotions = new EntitySet<VisitorPromotion>(new Action<VisitorPromotion>(this.attach_VisitorPromotions), new Action<VisitorPromotion>(this.detach_VisitorPromotions));
		this._ReferToFriends = new EntitySet<ReferToFriend>(new Action<ReferToFriend>(this.attach_ReferToFriends), new Action<ReferToFriend>(this.detach_ReferToFriends));
		this._DiscountType = default(EntityRef<DiscountType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CodeNumber
	{
		get
		{
			return this._CodeNumber;
		}
		set
		{
			if ((this._CodeNumber != value))
			{
				this.OnCodeNumberChanging(value);
				this.SendPropertyChanging();
				this._CodeNumber = value;
				this.SendPropertyChanged("CodeNumber");
				this.OnCodeNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codeused", DbType="Bit")]
	public System.Nullable<bool> Codeused
	{
		get
		{
			return this._Codeused;
		}
		set
		{
			if ((this._Codeused != value))
			{
				this.OnCodeusedChanging(value);
				this.SendPropertyChanging();
				this._Codeused = value;
				this.SendPropertyChanged("Codeused");
				this.OnCodeusedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedDate", DbType="Date")]
	public System.Nullable<System.DateTime> GeneratedDate
	{
		get
		{
			return this._GeneratedDate;
		}
		set
		{
			if ((this._GeneratedDate != value))
			{
				this.OnGeneratedDateChanging(value);
				this.SendPropertyChanging();
				this._GeneratedDate = value;
				this.SendPropertyChanged("GeneratedDate");
				this.OnGeneratedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidatPeriod", DbType="Int")]
	public System.Nullable<int> ValidatPeriod
	{
		get
		{
			return this._ValidatPeriod;
		}
		set
		{
			if ((this._ValidatPeriod != value))
			{
				this.OnValidatPeriodChanging(value);
				this.SendPropertyChanging();
				this._ValidatPeriod = value;
				this.SendPropertyChanged("ValidatPeriod");
				this.OnValidatPeriodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedDate", DbType="Date")]
	public System.Nullable<System.DateTime> UsedDate
	{
		get
		{
			return this._UsedDate;
		}
		set
		{
			if ((this._UsedDate != value))
			{
				this.OnUsedDateChanging(value);
				this.SendPropertyChanging();
				this._UsedDate = value;
				this.SendPropertyChanged("UsedDate");
				this.OnUsedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountTypeId", DbType="Int")]
	public System.Nullable<int> DiscountTypeId
	{
		get
		{
			return this._DiscountTypeId;
		}
		set
		{
			if ((this._DiscountTypeId != value))
			{
				if (this._DiscountType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDiscountTypeIdChanging(value);
				this.SendPropertyChanging();
				this._DiscountTypeId = value;
				this.SendPropertyChanged("DiscountTypeId");
				this.OnDiscountTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionCode", DbType="NVarChar(20)")]
	public string PromotionCode
	{
		get
		{
			return this._PromotionCode;
		}
		set
		{
			if ((this._PromotionCode != value))
			{
				this.OnPromotionCodeChanging(value);
				this.SendPropertyChanging();
				this._PromotionCode = value;
				this.SendPropertyChanged("PromotionCode");
				this.OnPromotionCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="Date")]
	public System.Nullable<System.DateTime> ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discountcode_VisitorPromotion", Storage="_VisitorPromotions", ThisKey="CodeNumber", OtherKey="CodeNumber")]
	public EntitySet<VisitorPromotion> VisitorPromotions
	{
		get
		{
			return this._VisitorPromotions;
		}
		set
		{
			this._VisitorPromotions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discountcode_ReferToFriend", Storage="_ReferToFriends", ThisKey="CodeNumber", OtherKey="DiscountcodeId")]
	public EntitySet<ReferToFriend> ReferToFriends
	{
		get
		{
			return this._ReferToFriends;
		}
		set
		{
			this._ReferToFriends.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiscountType_Discountcode", Storage="_DiscountType", ThisKey="DiscountTypeId", OtherKey="DiscountTypeId", IsForeignKey=true)]
	public DiscountType DiscountType
	{
		get
		{
			return this._DiscountType.Entity;
		}
		set
		{
			DiscountType previousValue = this._DiscountType.Entity;
			if (((previousValue != value) 
						|| (this._DiscountType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._DiscountType.Entity = null;
					previousValue.Discountcodes.Remove(this);
				}
				this._DiscountType.Entity = value;
				if ((value != null))
				{
					value.Discountcodes.Add(this);
					this._DiscountTypeId = value.DiscountTypeId;
				}
				else
				{
					this._DiscountTypeId = default(Nullable<int>);
				}
				this.SendPropertyChanged("DiscountType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_VisitorPromotions(VisitorPromotion entity)
	{
		this.SendPropertyChanging();
		entity.Discountcode = this;
	}
	
	private void detach_VisitorPromotions(VisitorPromotion entity)
	{
		this.SendPropertyChanging();
		entity.Discountcode = null;
	}
	
	private void attach_ReferToFriends(ReferToFriend entity)
	{
		this.SendPropertyChanging();
		entity.Discountcode = this;
	}
	
	private void detach_ReferToFriends(ReferToFriend entity)
	{
		this.SendPropertyChanging();
		entity.Discountcode = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="mashaweeruae.DiscountType")]
public partial class DiscountType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DiscountTypeId;
	
	private System.Nullable<int> _StandardPer;
	
	private System.Nullable<int> _FixedAmount;
	
	private System.Nullable<int> _SpecialPer;
	
	private System.Nullable<int> _ValidatePeriodInDays;
	
	private string _Description;
	
	private System.Nullable<bool> _Activate;
	
	private EntitySet<Discountcode> _Discountcodes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountTypeIdChanging(int value);
    partial void OnDiscountTypeIdChanged();
    partial void OnStandardPerChanging(System.Nullable<int> value);
    partial void OnStandardPerChanged();
    partial void OnFixedAmountChanging(System.Nullable<int> value);
    partial void OnFixedAmountChanged();
    partial void OnSpecialPerChanging(System.Nullable<int> value);
    partial void OnSpecialPerChanged();
    partial void OnValidatePeriodInDaysChanging(System.Nullable<int> value);
    partial void OnValidatePeriodInDaysChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActivateChanging(System.Nullable<bool> value);
    partial void OnActivateChanged();
    #endregion
	
	public DiscountType()
	{
		this._Discountcodes = new EntitySet<Discountcode>(new Action<Discountcode>(this.attach_Discountcodes), new Action<Discountcode>(this.detach_Discountcodes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DiscountTypeId
	{
		get
		{
			return this._DiscountTypeId;
		}
		set
		{
			if ((this._DiscountTypeId != value))
			{
				this.OnDiscountTypeIdChanging(value);
				this.SendPropertyChanging();
				this._DiscountTypeId = value;
				this.SendPropertyChanged("DiscountTypeId");
				this.OnDiscountTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StandardPer", DbType="Int")]
	public System.Nullable<int> StandardPer
	{
		get
		{
			return this._StandardPer;
		}
		set
		{
			if ((this._StandardPer != value))
			{
				this.OnStandardPerChanging(value);
				this.SendPropertyChanging();
				this._StandardPer = value;
				this.SendPropertyChanged("StandardPer");
				this.OnStandardPerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedAmount", DbType="Int")]
	public System.Nullable<int> FixedAmount
	{
		get
		{
			return this._FixedAmount;
		}
		set
		{
			if ((this._FixedAmount != value))
			{
				this.OnFixedAmountChanging(value);
				this.SendPropertyChanging();
				this._FixedAmount = value;
				this.SendPropertyChanged("FixedAmount");
				this.OnFixedAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialPer", DbType="Int")]
	public System.Nullable<int> SpecialPer
	{
		get
		{
			return this._SpecialPer;
		}
		set
		{
			if ((this._SpecialPer != value))
			{
				this.OnSpecialPerChanging(value);
				this.SendPropertyChanging();
				this._SpecialPer = value;
				this.SendPropertyChanged("SpecialPer");
				this.OnSpecialPerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidatePeriodInDays", DbType="Int")]
	public System.Nullable<int> ValidatePeriodInDays
	{
		get
		{
			return this._ValidatePeriodInDays;
		}
		set
		{
			if ((this._ValidatePeriodInDays != value))
			{
				this.OnValidatePeriodInDaysChanging(value);
				this.SendPropertyChanging();
				this._ValidatePeriodInDays = value;
				this.SendPropertyChanged("ValidatePeriodInDays");
				this.OnValidatePeriodInDaysChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(20)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activate", DbType="Bit")]
	public System.Nullable<bool> Activate
	{
		get
		{
			return this._Activate;
		}
		set
		{
			if ((this._Activate != value))
			{
				this.OnActivateChanging(value);
				this.SendPropertyChanging();
				this._Activate = value;
				this.SendPropertyChanged("Activate");
				this.OnActivateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiscountType_Discountcode", Storage="_Discountcodes", ThisKey="DiscountTypeId", OtherKey="DiscountTypeId")]
	public EntitySet<Discountcode> Discountcodes
	{
		get
		{
			return this._Discountcodes;
		}
		set
		{
			this._Discountcodes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Discountcodes(Discountcode entity)
	{
		this.SendPropertyChanging();
		entity.DiscountType = this;
	}
	
	private void detach_Discountcodes(Discountcode entity)
	{
		this.SendPropertyChanging();
		entity.DiscountType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="mashaweeruae.CustomerLocation")]
public partial class CustomerLocation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _DeliveryLocId;
	
	private string _CompName;
	
	private string _ContatctPerson;
	
	private string _Email;
	
	private string _PhoneNum;
	
	private string _Address;
	
	private string _NearestLandMark;
	
	private System.Nullable<int> _City;
	
	private System.Nullable<int> _CustomerId;
	
	private System.Nullable<int> _AreaId;
	
	private string _TypeLoc;
	
	private EntityRef<Visitor> _Visitor;
	
	private EntityRef<Zone> _Zone;
	
	private EntityRef<EEmirate> _EEmirate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeliveryLocIdChanging(int value);
    partial void OnDeliveryLocIdChanged();
    partial void OnCompNameChanging(string value);
    partial void OnCompNameChanged();
    partial void OnContatctPersonChanging(string value);
    partial void OnContatctPersonChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumChanging(string value);
    partial void OnPhoneNumChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNearestLandMarkChanging(string value);
    partial void OnNearestLandMarkChanged();
    partial void OnCityChanging(System.Nullable<int> value);
    partial void OnCityChanged();
    partial void OnCustomerIdChanging(System.Nullable<int> value);
    partial void OnCustomerIdChanged();
    partial void OnAreaIdChanging(System.Nullable<int> value);
    partial void OnAreaIdChanged();
    partial void OnTypeLocChanging(string value);
    partial void OnTypeLocChanged();
    #endregion
	
	public CustomerLocation()
	{
		this._Visitor = default(EntityRef<Visitor>);
		this._Zone = default(EntityRef<Zone>);
		this._EEmirate = default(EntityRef<EEmirate>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryLocId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int DeliveryLocId
	{
		get
		{
			return this._DeliveryLocId;
		}
		set
		{
			if ((this._DeliveryLocId != value))
			{
				this.OnDeliveryLocIdChanging(value);
				this.SendPropertyChanging();
				this._DeliveryLocId = value;
				this.SendPropertyChanged("DeliveryLocId");
				this.OnDeliveryLocIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompName", DbType="NVarChar(100)")]
	public string CompName
	{
		get
		{
			return this._CompName;
		}
		set
		{
			if ((this._CompName != value))
			{
				this.OnCompNameChanging(value);
				this.SendPropertyChanging();
				this._CompName = value;
				this.SendPropertyChanged("CompName");
				this.OnCompNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContatctPerson", DbType="NVarChar(100)")]
	public string ContatctPerson
	{
		get
		{
			return this._ContatctPerson;
		}
		set
		{
			if ((this._ContatctPerson != value))
			{
				this.OnContatctPersonChanging(value);
				this.SendPropertyChanging();
				this._ContatctPerson = value;
				this.SendPropertyChanged("ContatctPerson");
				this.OnContatctPersonChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNum", DbType="NVarChar(20)")]
	public string PhoneNum
	{
		get
		{
			return this._PhoneNum;
		}
		set
		{
			if ((this._PhoneNum != value))
			{
				this.OnPhoneNumChanging(value);
				this.SendPropertyChanging();
				this._PhoneNum = value;
				this.SendPropertyChanged("PhoneNum");
				this.OnPhoneNumChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NearestLandMark", DbType="NVarChar(100)")]
	public string NearestLandMark
	{
		get
		{
			return this._NearestLandMark;
		}
		set
		{
			if ((this._NearestLandMark != value))
			{
				this.OnNearestLandMarkChanging(value);
				this.SendPropertyChanging();
				this._NearestLandMark = value;
				this.SendPropertyChanged("NearestLandMark");
				this.OnNearestLandMarkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="Int")]
	public System.Nullable<int> City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				if (this._EEmirate.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int")]
	public System.Nullable<int> CustomerId
	{
		get
		{
			return this._CustomerId;
		}
		set
		{
			if ((this._CustomerId != value))
			{
				if (this._Visitor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIdChanging(value);
				this.SendPropertyChanging();
				this._CustomerId = value;
				this.SendPropertyChanged("CustomerId");
				this.OnCustomerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaId", DbType="Int")]
	public System.Nullable<int> AreaId
	{
		get
		{
			return this._AreaId;
		}
		set
		{
			if ((this._AreaId != value))
			{
				if (this._Zone.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAreaIdChanging(value);
				this.SendPropertyChanging();
				this._AreaId = value;
				this.SendPropertyChanged("AreaId");
				this.OnAreaIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeLoc", DbType="NVarChar(5)")]
	public string TypeLoc
	{
		get
		{
			return this._TypeLoc;
		}
		set
		{
			if ((this._TypeLoc != value))
			{
				this.OnTypeLocChanging(value);
				this.SendPropertyChanging();
				this._TypeLoc = value;
				this.SendPropertyChanged("TypeLoc");
				this.OnTypeLocChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Visitor_CustomerLocation", Storage="_Visitor", ThisKey="CustomerId", OtherKey="VisitorId", IsForeignKey=true)]
	public Visitor Visitor
	{
		get
		{
			return this._Visitor.Entity;
		}
		set
		{
			Visitor previousValue = this._Visitor.Entity;
			if (((previousValue != value) 
						|| (this._Visitor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Visitor.Entity = null;
					previousValue.CustomerLocations.Remove(this);
				}
				this._Visitor.Entity = value;
				if ((value != null))
				{
					value.CustomerLocations.Add(this);
					this._CustomerId = value.VisitorId;
				}
				else
				{
					this._CustomerId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Visitor");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_CustomerLocation", Storage="_Zone", ThisKey="AreaId", OtherKey="ZoneId", IsForeignKey=true)]
	public Zone Zone
	{
		get
		{
			return this._Zone.Entity;
		}
		set
		{
			Zone previousValue = this._Zone.Entity;
			if (((previousValue != value) 
						|| (this._Zone.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Zone.Entity = null;
					previousValue.CustomerLocations.Remove(this);
				}
				this._Zone.Entity = value;
				if ((value != null))
				{
					value.CustomerLocations.Add(this);
					this._AreaId = value.ZoneId;
				}
				else
				{
					this._AreaId = default(Nullable<int>);
				}
				this.SendPropertyChanged("Zone");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EEmirate_CustomerLocation", Storage="_EEmirate", ThisKey="City", OtherKey="EmirateId", IsForeignKey=true)]
	public EEmirate EEmirate
	{
		get
		{
			return this._EEmirate.Entity;
		}
		set
		{
			EEmirate previousValue = this._EEmirate.Entity;
			if (((previousValue != value) 
						|| (this._EEmirate.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._EEmirate.Entity = null;
					previousValue.CustomerLocations.Remove(this);
				}
				this._EEmirate.Entity = value;
				if ((value != null))
				{
					value.CustomerLocations.Add(this);
					this._City = value.EmirateId;
				}
				else
				{
					this._City = default(Nullable<int>);
				}
				this.SendPropertyChanged("EEmirate");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
